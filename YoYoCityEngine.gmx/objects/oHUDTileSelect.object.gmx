<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oHUDParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>WindowWidth=600;
WindowHeight=500;

WindowWidthMin=300;
WindowWidthMax=min(1024,window_get_width());

WindowHeightMin=200;
WindowHeightMax=min(1024,window_get_height());

WindowCaption="TILE SELECT";

Tab=TILE_TAB_ROOFS
TabMax=TILE_TAB_MAX

Holding=0

device_mouse_raw_xprevious=device_mouse_raw_x(0)
device_mouse_raw_yprevious=device_mouse_raw_y(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving the window
if (Holding==1)
{
    x+=(device_mouse_raw_x(0)-device_mouse_raw_xprevious)
    y+=(device_mouse_raw_y(0)-device_mouse_raw_yprevious)
    
    x=clamp(x,1,window_get_width()-1)
    y=clamp(y,1,window_get_height()-1)
    
    device_mouse_raw_xprevious=device_mouse_raw_x(0)
    device_mouse_raw_yprevious=device_mouse_raw_y(0)
}
//Resizing the window
else if (Holding==2)
{
    WindowWidth+=(device_mouse_raw_x(0)-device_mouse_raw_xprevious)
    WindowHeight+=(device_mouse_raw_y(0)-device_mouse_raw_yprevious)
    
    WindowWidth =clamp(WindowWidth ,WindowWidthMin ,WindowWidthMax );
    WindowHeight=clamp(WindowHeight,WindowHeightMin,WindowHeightMax);
    
    device_mouse_raw_xprevious=device_mouse_raw_x(0)
    device_mouse_raw_yprevious=device_mouse_raw_y(0)
    
    //display_mouse_set(x+WindowWidth-12,y+WindowHeight-12)
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Holding=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_rectangle(x,y,x+WindowWidth,y+70)
{
    Holding=1
    device_mouse_raw_xprevious=device_mouse_raw_x(0)
    device_mouse_raw_yprevious=device_mouse_raw_y(0)
}

if mouse_rectangle(x+WindowWidth-25,y+WindowHeight-25,x+WindowWidth,y+WindowHeight)
{
    Holding=2
    device_mouse_raw_xprevious=device_mouse_raw_x(0)
    device_mouse_raw_yprevious=device_mouse_raw_y(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(window_get_width(),window_get_height())

//Draw top rectangle and outline of window
draw_set_color(c_black)
draw_rectangle(x,y,x+WindowWidth,y+70,0)
draw_rectangle(x-3,y-3,x+WindowWidth+3,y+WindowHeight+3,1)

//Draw the window's caption
draw_set_color(c_white)
draw_set_font(fTwCenM)
draw_set_halign(fa_left)
draw_set_valign(fa_center)
draw_text(x+20,y+20,WindowCaption) 

//Draw the tabs
draw_set_halign(fa_center)
draw_set_font(fTwCenConM)
for( var i=0; i&lt;=TabMax; i+=1)
{
    var tabx1=x+3+(i*85); //X location of this tab
    
    //Logic for selecting tabs
    if mouse_click_rectangle(tabx1,y+41,tabx1+82,y+67)
    {
        Tab=i
    }
    
    //Selected colour
    if(i==Tab)
    {
        draw_set_color(c_gray);
        draw_rectangle(tabx1,y+41,tabx1+82,y+67,0);
    }
    
    //Outline
    draw_set_color(c_white);
    draw_rectangle(tabx1,y+41,tabx1+82,y+67,1);   
    
    //Text
    var str="ROOFS";
    if(i==TILE_TAB_WALLS) str="WALLS";
    if(i==TILE_TAB_FLOORS) str="FLOORS";
    draw_text(tabx1+41,y+54,str); 
}

//Draw the right hand bar
draw_set_color(c_black)
draw_rectangle(x+WindowWidth-25,y+73,x+WindowWidth,y+98,0) //Scrollbar up
draw_rectangle(x+WindowWidth-25,y+WindowHeight-53,x+WindowWidth,y+WindowHeight-28,0) //Scrollbar down
draw_rectangle(x+WindowWidth-25,y+WindowHeight-25,x+WindowWidth,y+WindowHeight,0) //Resize window

//Control &amp; draw the scrollbar
draw_rectangle(x+WindowWidth-25,y+101,x+WindowWidth,y+WindowHeight-56,0)

//Control &amp; draw window content
draw_set_color(c_white)
draw_rectangle(x,y+73,x+WindowWidth-28,y+WindowHeight,0)

draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cancel out standard drawing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
