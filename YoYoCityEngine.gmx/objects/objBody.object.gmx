<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scale = 0.21;

pcDefineDefault();

driveType     = DRIVE_RWD;  // _RWD, _FWD, _4WD. If using _4WD you actually will need to lower the power (maxDriveForce)
maxMoveSpeed  = 14;         // Top speed essentially. This varies on the pixel-meter ratio. So in theory 19 could be 50MPH, just a matter of translation.
maxDriveForce = 40;         // The force applied to the wheels, I guess this translates best as torque. (It's weird because there's no wheel friction, only lateral grip)
steerLow      = 1;          // Steering response at low speed (0 being unresponsive, 1 being completely responsive)
steerHigh     = 0.5;        // Steering response at high speed (0 being unresponsive, 1 being completely responsive, so 0.5 is semi-responsive)
maxSteerAngle = 45;         // Wheel angle/turning circle at low speed
minSteerAngle = 45;         // Wheel angle/turning circle at high speed
frontGrip     = 4;         // LATERAL grip of front tyres
rearGrip      = 4;         // LATERAL Grip of rear tyres
frontBrakes   = 0;
rearBrakes    = 10;
toe           = 0;          // This is the individual inward angle (degrees) of the front tyres, negative is an outward angle
ackerman      = 1.44;       // 1.44 = 36 / 24 degrees. The ratio of turn between inside and outside tyres.

pcModelPhysicsBody();
pcModelJointWheels();
//pcModelWeight();
pcApplyProperties();
pcApplySettingsToWheels();
 
image_xscale = scale;
image_yscale = scale;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
pcHandleSteering();
pcHandleDriving();

if (global.Mode == MODE_PLAY)
    {
    var forwardVelocity = GetForwardVelocity();
    oCamera.CameraX = lerp(oCamera.CameraX, x + lengthdir_x(400*(forwardVelocity/maxMoveSpeed), phy_rotation-90), 0.1);
    oCamera.CameraY = lerp(oCamera.CameraY, y - lengthdir_y(400*(forwardVelocity/maxMoveSpeed), phy_rotation-90), 0.1);
    oCamera.CameraZ = lerp(oCamera.CameraZ, -450-(200*(abs(forwardVelocity)/maxMoveSpeed)), 0.1);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>136,16</point>
    <point>136,288</point>
    <point>16,288</point>
  </PhysicsShapePoints>
</object>
